{"version":3,"sources":["p2-main/m1-ui/u1-app/App.module.css","p3-features/f1-auth/a1-login/l1-ui/LoginPage.module.css","p1-common/c1-ui/u1-containers/Container.module.css","p1-common/c1-ui/u2-buttons/CustomButton.module.css","p1-common/c1-ui/u5-spins/CustomSpin.module.css","p3-features/f1-auth/a2-profile/p1-ui/ProfilePage.module.css","p1-common/c0-debug/debug.tsx","p1-common/c1-ui/u1-containers/Container.tsx","p1-common/c1-ui/u2-buttons/CustomButton.tsx","p1-common/c1-ui/u3-inputs/CustomInput.tsx","p3-features/f1-auth/a1-login/l1-ui/LoginForm/LoginForm.tsx","p2-main/m2-bll/booleans/useBooleanSelectors.ts","p2-main/m2-bll/booleans/BooleanActions.ts","p2-main/m2-bll/booleans/booleanCallbacks.ts","p2-main/m2-bll/thunks.ts","p2-main/m3-dal/instance.ts","p0-config/config.ts","p3-features/f1-auth/a1-login/l3-dal/LoginAPI.ts","p3-features/f1-auth/a2-profile/p2-bll/ProfileActions.ts","p1-common/c1-ui/u5-spins/CustomSpin.tsx","p3-features/f1-auth/a1-login/l1-ui/LoginForm/LoginFormContainer.tsx","p3-features/f1-auth/a1-login/l2-bll/sendToken.ts","p3-features/f1-auth/a1-login/l1-ui/LoginPage.tsx","p3-features/f1-auth/a2-profile/p1-ui/ProfilePage.tsx","p1-common/c1-ui/u4-redirets/AuthRedirectPage.tsx","p2-main/m1-ui/u2-routes/HeaderForDevelopers.tsx","p2-main/m1-ui/u2-routes/pathHelper.ts","p2-main/m1-ui/u2-routes/Routes.tsx","p2-main/m2-bll/booleans/booleanReducer.ts","p2-main/m2-bll/store.ts","p3-features/f1-auth/a2-profile/p2-bll/profileReducer.ts","p2-main/m1-ui/u4-header/Header.tsx","p2-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","p2-main/m1-ui/u3-ping/Ping.tsx","index.tsx","p3-features/f1-auth/a1-login/l1-ui/LoginForm/LoginForm.module.css","p1-common/c1-ui/u3-inputs/CustomInput.module.css"],"names":["module","exports","Log","s","Container","React","memo","direction","className","restProps","renderLog","CustomButton","type","base","ClassCustomInput","onChange","onChangeText","onChangeCallback","useCallback","e","currentTarget","value","props","this","PureComponent","LoginForm","token","setToken","sendToken","loading","onFinish","onFinishFailed","name","initialValues","form","Item","rules","required","message","prefix","placeholder","autoFocus","maxLength","onPressEnter","suffix","EnterOutlined","onClick","htmlType","loginButton","useBooleanSelector","names","useSelector","store","booleans","result","n","push","find","b","selectBooleans","booleanInitialState","BooleanActions","setBooleanLoading","dispatch","BOOLEAN_NAMES","data","undefined","setBooleanError","error","setBooleanSuccess","clearBooleans","tryCatch","logic","info","a","response","console","instance","axios","create","baseURL","MainAPI","ping","post","frontTime","Date","getTime","LoginAPI","login","profileInitialState","profile","isAuth","ProfileActions","test","CustomSpin","size","LOGIN_BOOLEAN_NAMES","LoginFormContainer","tokenInParams","useParams","useState","setLoading","setError","success","setSuccess","newLoading","newError","newSuccess","useMemoBooleanSelector","firstRendering","setFirstRendering","redirect","setRedirect","spin","setSpin","useDispatch","sendTokenTC","useEffect","setTimeout","toString","values","errorInfo","errorFields","errors","to","PATH","PROFILE","LoginPage","ProfilePage","AuthRedirectPage","LOGIN","HeaderForDevelopers","routes","map","r","path","length","pathHelper","key","_id","DEFAULT","LOGIN_WITH_TOKEN","v1","exact","component","routesForRendering","render","Routes","changeBooleans","stateBooleans","actionBooleans","stateB","foundActionB","actionB","addBooleans","updatedBooleans","newBooleans","newB","reducers","combineReducers","state","action","createStore","applyMiddleware","thunkMiddleware","Header","title","subTitle","href","rel","target","App","Boolean","window","location","hostname","match","Ping","show","then","warn","backTime","notification","placement","catch","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.647eee5a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1K0KO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoginPage\":\"LoginPage_LoginPage__35ruh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"Container_base__1m1B8\",\"column\":\"Container_column__2vrkD Container_base__1m1B8\",\"row\":\"Container_row__2J_Ne Container_base__1m1B8\",\"testFlexDirection\":\"Container_testFlexDirection__1SwcZ Container_base__1m1B8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"CustomButton_base__2GqgA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"CustomSpin_base__3pH0E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfilePage\":\"ProfilePage_ProfilePage__1sIGQ\"};","import {IS_DEVELOPER_VERSION} from \"../../p0-config/config\";\r\nimport React from \"react\";\r\n\r\nexport const log = (...args: any[]) => {\r\n    if (IS_DEVELOPER_VERSION) console.log(...args);\r\n};\r\n\r\nlog(`\r\n!!! if component have useSomeHook\r\n - rendering log() 2 times\r\nrendering <Log/> 1 times always\r\n\r\n`);\r\n\r\nconst Log: React.FC<{ s: string }> = ({s}) => {\r\n    log(s);\r\n    return null\r\n};\r\n\r\nexport default Log;\r\n","import React, {DetailedHTMLProps, HTMLAttributes} from \"react\";\nimport {log} from \"../../c0-debug/debug\";\nimport s from \"./Container.module.css\";\n\ntype DivPropsType = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n\ntype ContainerPropsType = DivPropsType & {\n    direction?: \"column\" | \"row\"\n\n    renderLog?: string\n}\n\n// flex container\nconst Container: React.FC<ContainerPropsType> = React.memo((\n    {\n        direction = \"column\",\n        className,\n\n        renderLog,\n        ...restProps\n    }\n) => {\n\n    renderLog && log(renderLog);\n    return (\n        <div className={className || s[direction]} {...restProps}/>\n    );\n});\n\nexport default Container;\n","import React from \"react\";\r\nimport {log} from \"../../c0-debug/debug\";\r\nimport {Button} from \"antd\";\r\nimport {ButtonProps} from \"antd/es/button\";\r\nimport {ButtonType} from \"antd/lib/button/button\";\r\nimport s from \"./CustomButton.module.css\";\r\n\r\ntype CustomButtonPropsType = ButtonProps & {\r\n\r\n    renderLog?: string\r\n}\r\n\r\nconst CustomButton: React.FC<CustomButtonPropsType> = React.memo((\r\n    {\r\n        type = \"primary\" as ButtonType,\r\n        className,\r\n\r\n        renderLog,\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n    log(renderLog || \"rendering Button\");\r\n    return (\r\n        <Button type={type} className={className || s.base} {...restProps}/>\r\n    );\r\n});\r\n\r\nexport default CustomButton;\r\n","import React, {ChangeEvent, useCallback} from \"react\";\r\nimport Log, {log} from \"../../c0-debug/debug\";\r\nimport {Input} from \"antd\";\r\nimport {InputProps} from \"antd/es/input\";\r\nimport s from \"./CustomInput.module.css\";\r\n\r\ntype CustomInputPropsType = InputProps & {\r\n    onChangeText?: (value: string) => void\r\n\r\n    renderLog?: string\r\n}\r\n\r\nconst CustomInput: React.FC<CustomInputPropsType> = React.memo((\r\n    {\r\n        onChange,\r\n        onChangeText,\r\n        className,\r\n\r\n        renderLog,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e);\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }, [onChange, onChangeText]);\r\n\r\n    return (\r\n        <>\r\n            <Log s={renderLog || \"rendering Input\"}/>\r\n            <Input onChange={onChangeCallback} className={className || s.base} {...restProps}/>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default CustomInput;\r\n\r\n// class input for fix antd form\r\nexport class ClassCustomInput extends React.PureComponent<CustomInputPropsType> {\r\n    onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.props.onChange && this.props.onChange(e);\r\n        this.props.onChangeText && this.props.onChangeText(e.currentTarget.value);\r\n    };\r\n\r\n    render() {\r\n        const {onChangeText, onChange, renderLog, className, ...restProps} = this.props;\r\n\r\n        log(renderLog || \"rendering Input\");\r\n        return (\r\n            <Input onChange={this.onChangeCallback} className={className || s.base} {...restProps}/>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Log from \"../../../../../p1-common/c0-debug/debug\";\r\nimport s from \"./LoginForm.module.css\";\r\nimport Container from \"../../../../../p1-common/c1-ui/u1-containers/Container\";\r\nimport CustomButton from \"../../../../../p1-common/c1-ui/u2-buttons/CustomButton\";\r\nimport\r\n    // CustomInput,\r\n{ClassCustomInput} from \"../../../../../p1-common/c1-ui/u3-inputs/CustomInput\";\r\nimport {EnterOutlined} from \"@ant-design/icons\";\r\nimport {\r\n    // Button, Input,\r\n    Form,\r\n} from \"antd\";\r\n\r\nexport type LoginFormDataType = {\r\n    token?: string\r\n}\r\n\r\nexport type LoginFormErrorDataType = {\r\n    values: LoginFormDataType\r\n    errorFields: {\r\n        name: (string | number)[]\r\n        errors: string[]\r\n    }[]\r\n    outOfDate: boolean\r\n}\r\n\r\ntype LoginFormPropsType = {\r\n    loading: boolean\r\n    token: string\r\n    setToken: (token: string) => void;\r\n    sendToken: () => void\r\n    onFinish: (values: LoginFormDataType) => void\r\n    onFinishFailed: (errorInfo: LoginFormErrorDataType) => void\r\n}\r\n\r\nconst LoginForm: React.FC<LoginFormPropsType> = React.memo((\r\n    {token, setToken, sendToken, loading, onFinish, onFinishFailed}\r\n) => {\r\n    return (\r\n        <Container className={s.LoginForm}>\r\n            <Log s={\"5 ----- rendering LoginForm\"}/>\r\n            login\r\n\r\n            <Form\r\n                name=\"token form\"\r\n                initialValues={{token}}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                className={s.form}\r\n            >\r\n                <Form.Item\r\n                    // label=\" \"\r\n                    name=\"token\" // !!! warning !!! // Function components cannot be given refs. // if FunctionalInputComponent\r\n                    rules={[\r\n                        {required: true, message: \"Please input your token!\"},\r\n                        // { // !!! warning !!! // findDOMNode is deprecated in StrictMode\r\n                        //     validator: (formItemInfo, inputValue) => {\r\n                        //         log(formItemInfo, inputValue);\r\n                        //         if (inputValue === \"test\") return Promise.reject('test error');\r\n                        //         else return Promise.resolve();\r\n                        //     }\r\n                        // },\r\n                        // {len: 36, message: \"Length must be 36\"}, // !!! warning !!! // findDOMNode is deprecated in StrictMode\r\n                    ]}\r\n                >\r\n                    <ClassCustomInput\r\n                        // <CustomInput // !!! warning !!! // Function components cannot be given refs. // if FunctionalInputComponent\r\n                        // <Input\r\n                        prefix={\"t: \"}\r\n                        placeholder={\"* please input token\"}\r\n                        value={token}\r\n                        autoFocus\r\n                        maxLength={36}\r\n                        onChangeText={setToken} // no in antd Input\r\n                        onPressEnter={sendToken}\r\n                        suffix={<EnterOutlined onClick={sendToken}/>}\r\n\r\n                        renderLog={\"7 +-- rendering log() token input\"} // no in antd Input\r\n                    />\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <CustomButton // !!! warning !!! // findDOMNode is deprecated in StrictMode\r\n                        // <Button //  !!! warning !!! // findDOMNode is deprecated in StrictMode\r\n                        htmlType=\"submit\"\r\n                        className={s.loginButton}\r\n                        loading={loading}\r\n\r\n                        renderLog={\"7 +-- rendering log() login button\"} // no in antd Button\r\n                    >\r\n                        Login\r\n                        {/*</Button>*/}\r\n                    </CustomButton>\r\n                </Form.Item>\r\n            </Form>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default LoginForm;\r\n","import {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../store\";\r\nimport {BooleanType} from \"./BooleanActions\";\r\nimport {useState} from \"react\";\r\n// import {createSelector} from \"reselect\";\r\n// import {log} from \"../../../p1-common/c0-debug/debug\";\r\n\r\n// select booleans from all booleans\r\nexport const selectBooleans = (booleans: BooleanType[], names: string[]): BooleanType[] => {\r\n    const result: BooleanType[] = [];\r\n    for (const n of names) {\r\n        result.push(\r\n            booleans.find(b => b.name === n)\r\n            || {name: n, value: false} // if not find\r\n        );\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const useBooleanSelector = (names: string[]): BooleanType[] => { // find boolean values with names\r\n    return useSelector((store: AppStoreType) => selectBooleans(store.booleans.booleans, names));\r\n};\r\n\r\n// memo for loading, error, success\r\nexport const useMemoBooleanSelector = (names: [string, string, string]) => {\r\n    const [loading, setLoading] = useState<BooleanType>({name: names[0], value: false});\r\n    const [error, setError] = useState<BooleanType>({name: names[1], value: false});\r\n    const [success, setSuccess] = useState<BooleanType>({name: names[2], value: false});\r\n\r\n    // + 1 save rerender, not rerender children with props and callback with loading, error, success\r\n    const [newLoading, newError, newSuccess] = useBooleanSelector(names);\r\n\r\n    const result = [loading, error, success];\r\n    if (newLoading.value !== loading.value) {\r\n        result[0] = newLoading;\r\n        setLoading(newLoading);\r\n    }\r\n    if (newError.value !== error.value) {\r\n        result[1] = newError;\r\n        setError(newError);\r\n    }\r\n    if (newSuccess.value !== success.value) {\r\n        result[2] = newSuccess;\r\n        setSuccess(newSuccess);\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\n// reselect, not completed, useMemoBooleanSelector simplest\r\n// const selectBooleansFromStore = (store: AppStoreType, names: string[]) => store.booleans.booleans;\r\n// const memoSelectBooleansFromStore = createSelector(\r\n//     selectBooleansFromStore,\r\n//     (booleans: BooleanType[]) => booleans\r\n// );\r\n//\r\n// const selectNames = (store: AppStoreType, names: string[]) => names;\r\n// const memoSelectNames = createSelector(\r\n//     selectNames,\r\n//     (names: string[]) => names\r\n// );\r\n//\r\n// const memoSelectBooleans = createSelector(\r\n//     [memoSelectBooleansFromStore, memoSelectNames],\r\n//     (booleans: BooleanType[], names: string[]) => {\r\n//         log(\"reselect \", names);\r\n//         return selectBooleans(booleans, names)\r\n//     }\r\n// );\r\n//\r\n// export const useBooleanSelector = (names: string[]): BooleanType[] => {\r\n//     return useSelector((store: AppStoreType) => {\r\n//         return memoSelectBooleans(store, names)\r\n//     });\r\n// };\r\n","import {InferActionsType} from \"../actions\";\r\n\r\nexport type BooleanType = {\r\n    name: string;\r\n    value: boolean;\r\n    data?: any;\r\n}\r\n\r\nexport const booleanInitialState = {\r\n    booleans: [\r\n        // {name: \"loading\", value: true} // set initial booleans\r\n\r\n    ] as BooleanType[],\r\n};\r\n\r\nexport type BooleanActionsType = InferActionsType<typeof BooleanActions>;\r\n\r\nexport const BooleanActions = {\r\n    setBooleanValues: (booleans: BooleanType[]) => ({\r\n        type: \"BOOLEAN/SET_VALUES\",\r\n        booleans,\r\n    } as const),\r\n\r\n};\r\n","import {Dispatch} from \"redux\";\r\nimport {BooleanActions} from \"./BooleanActions\";\r\n\r\n// BOOLEAN_NAMES == [loading, error, success]\r\n\r\nexport const setBooleanLoading = (dispatch: Dispatch, BOOLEAN_NAMES: string[]) => {\r\n    dispatch(BooleanActions.setBooleanValues([\r\n        {name: BOOLEAN_NAMES[0], value: true},\r\n        {name: BOOLEAN_NAMES[1], value: false, data: undefined},\r\n        {name: BOOLEAN_NAMES[2], value: false}\r\n    ]))\r\n};\r\nexport const setBooleanError = (dispatch: Dispatch, BOOLEAN_NAMES: string[], error: any) => {\r\n    dispatch(BooleanActions.setBooleanValues([\r\n        {name: BOOLEAN_NAMES[0], value: false},\r\n        {name: BOOLEAN_NAMES[1], value: true, data: error},\r\n        {name: BOOLEAN_NAMES[2], value: false},\r\n    ]))\r\n};\r\nexport const setBooleanSuccess = (dispatch: Dispatch, BOOLEAN_NAMES: string[]) => {\r\n    dispatch(BooleanActions.setBooleanValues([\r\n        {name: BOOLEAN_NAMES[0], value: false},\r\n        {name: BOOLEAN_NAMES[1], value: false, data: undefined},\r\n        {name: BOOLEAN_NAMES[2], value: true},\r\n    ]))\r\n};\r\nexport const clearBooleans = (dispatch: Dispatch, BOOLEAN_NAMES: string[]) => {\r\n    dispatch(BooleanActions.setBooleanValues([\r\n        {name: BOOLEAN_NAMES[0], value: false},\r\n        {name: BOOLEAN_NAMES[1], value: false, data: undefined},\r\n        {name: BOOLEAN_NAMES[2], value: false},\r\n    ]))\r\n};\r\n","import {AppStoreType} from \"./store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {setBooleanError} from \"./booleans/booleanCallbacks\";\r\n\r\nexport type ReturnVoid = void;\r\nexport type ExtraArgument = {};\r\nexport type GetAppStoreType = () => AppStoreType;\r\n\r\nexport const tryCatch = async ( // for automatically setting request error\r\n    logic: () => void,\r\n    dispatch: Dispatch,\r\n    BOOLEAN_NAMES: string[],\r\n\r\n    info?: string,\r\n) => {\r\n    try {\r\n        await logic();\r\n\r\n    } catch (e) {\r\n        const error = e.response ? e.response.data.error : (e.message + ', more details in the console');\r\n        setBooleanError(dispatch, BOOLEAN_NAMES, error);\r\n\r\n        console.error(info + ' Error! :', {...e})\r\n    }\r\n};\r\n","import axios from \"axios\";\r\nimport {BACK_URL} from \"../../p0-config/config\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: BACK_URL,\r\n});\r\n\r\ntype PingAnswerType = {\r\n    backTime: number\r\n    frontTime: number\r\n    info: string\r\n    ping: number\r\n}\r\n\r\nexport const MainAPI = {\r\n    ping: async () => {\r\n        const response = await instance.post<PingAnswerType>('/ping', {frontTime: new Date().getTime()});\r\n\r\n        return response.data;\r\n    },\r\n};\r\n","export const IS_DEVELOPER_VERSION = false;\r\n\r\n// export const BACK_URL = \"http://localhost:7542/1.0\"; // for developers\r\nexport const BACK_URL = \"https://personal-area-it-incubator.herokuapp.com/1.0\"; // alpha release\r\n","import {instance} from \"../../../../p2-main/m3-dal/instance\";\r\n\r\nexport const LoginAPI = {\r\n    login: async (token: string) => {\r\n        const response = await instance.post<any>('/auth/login', {token});\r\n\r\n        return response.data;\r\n    },\r\n\r\n};\r\n","import {InferActionsType} from \"../../../../p2-main/m2-bll/actions\";\r\n\r\n\r\nexport type ProfileType = {\r\n    _id: string\r\n\r\n}\r\n\r\nexport const profileInitialState = {\r\n    profile: undefined as ProfileType | undefined,\r\n    isAuth: false\r\n};\r\n\r\nexport type ProfileActionsType = InferActionsType<typeof ProfileActions>;\r\n\r\nexport const ProfileActions = {\r\n    setProfile: (test: boolean) => ({\r\n        type: \"PROFILE/SET_PROFILE\",\r\n        test,\r\n    } as const),\r\n\r\n};\r\n","import React from \"react\";\nimport {log} from \"../../c0-debug/debug\";\nimport s from \"./CustomSpin.module.css\";\nimport {Spin} from \"antd\";\nimport {SpinProps, SpinSize} from \"antd/es/spin\";\n\ntype CustomSpinPropsType = SpinProps & {\n\n    renderLog?: string\n}\n\nconst CustomSpin: React.FC<CustomSpinPropsType> = React.memo((\n    {\n        size = \"large\" as SpinSize,\n        className,\n\n        renderLog,\n        ...restProps\n    }\n) => {\n\n    log(renderLog || \"rendering Spin\");\n    return (\n        <div className={className || s.base}>\n            <Spin size={size} {...restProps}/>\n        </div>\n    );\n});\n\nexport default CustomSpin;\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport LoginForm, {LoginFormDataType, LoginFormErrorDataType} from \"./LoginForm\";\r\nimport {useMemoBooleanSelector} from \"../../../../../p2-main/m2-bll/booleans/useBooleanSelectors\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {sendTokenTC} from \"../../l2-bll/sendToken\";\r\nimport {clearBooleans} from \"../../../../../p2-main/m2-bll/booleans/booleanCallbacks\";\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\nimport {PATH} from \"../../../../../p2-main/m1-ui/u2-routes/Routes\";\r\nimport {message} from \"antd\";\r\nimport CustomSpin from \"../../../../../p1-common/c1-ui/u5-spins/CustomSpin\";\r\nimport Log, {log} from \"../../../../../p1-common/c0-debug/debug\";\r\n\r\nexport const LOGIN_BOOLEAN_NAMES: [string, string, string] = [\"LOGIN/LOADING\", \"LOGIN/ERROR\", \"LOGIN/SUCCESS\"];\r\n\r\nconst LoginFormContainer = React.memo(() => {\r\n    const {token: tokenInParams} = useParams();\r\n    const [token, setToken] = useState<string>(tokenInParams);\r\n\r\n    const [loading, error, success] = useMemoBooleanSelector(LOGIN_BOOLEAN_NAMES);\r\n    const [firstRendering, setFirstRendering] = useState<boolean>(true);\r\n    const [redirect, setRedirect] = useState<boolean>(false);\r\n    const [spin, setSpin] = useState<boolean>(!!tokenInParams); // !!! need add validate(tokenInParams)\r\n\r\n    const dispatch = useDispatch();\r\n    const sendToken = useCallback(() => {\r\n        if (!loading.value && !success.value && token) dispatch(sendTokenTC(token)) // !!! need add validate(tokenInParams)\r\n    }, [dispatch, loading, token, success]);\r\n\r\n    useEffect(() => {\r\n        if (firstRendering) {\r\n            clearBooleans(dispatch, LOGIN_BOOLEAN_NAMES);\r\n            sendToken();\r\n\r\n            setFirstRendering(false); // + rerender\r\n        } else {\r\n            if (success.value) {\r\n                message.success(\"ok!\", 1);\r\n                setTimeout(() => setRedirect(true), 1500);\r\n            }\r\n            if (error.value) {\r\n                if (spin) setSpin(false);\r\n                else {\r\n                    message.error(error.data.toString()); // !!! need function objectOrAnyToString(error.data)\r\n                    clearBooleans(dispatch, LOGIN_BOOLEAN_NAMES);\r\n                }\r\n            }\r\n        }\r\n    }, [dispatch, firstRendering, setFirstRendering, success, error, tokenInParams, sendToken, spin]);\r\n\r\n    // callbacks\r\n    const onFinish = useCallback((values: LoginFormDataType) => {\r\n        log('Success:', values);\r\n        sendToken();\r\n    }, [sendToken]);\r\n    const onFinishFailed = useCallback((errorInfo: LoginFormErrorDataType) => {\r\n        console.error('Failed:', errorInfo);\r\n        message.error(errorInfo.errorFields[0].errors)\r\n    }, []);\r\n\r\n    // render\r\n    if (redirect) return <Redirect to={PATH.PROFILE}/>;\r\n    if (spin) return <CustomSpin renderLog={\"4 ----- rendering LoginFormContainer Spin\"}/>;\r\n\r\n    return (\r\n        <>\r\n            <Log s={\"4 ---- rendering LoginFormContainer\"}/>\r\n            <LoginForm\r\n                loading={loading.value}\r\n                token={token}\r\n                setToken={setToken}\r\n                sendToken={sendToken}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            />\r\n        </>\r\n    );\r\n});\r\n\r\nexport default LoginFormContainer;\r\n\r\n\r\n","import {ExtraArgument, ReturnVoid, tryCatch} from \"../../../../p2-main/m2-bll/thunks\";\r\nimport {AppStoreType} from \"../../../../p2-main/m2-bll/store\";\r\nimport {BooleanActionsType} from \"../../../../p2-main/m2-bll/booleans/BooleanActions\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {setBooleanLoading, setBooleanSuccess} from \"../../../../p2-main/m2-bll/booleans/booleanCallbacks\";\r\nimport {log} from \"../../../../p1-common/c0-debug/debug\";\r\nimport {LoginAPI} from \"../l3-dal/LoginAPI\";\r\nimport {LOGIN_BOOLEAN_NAMES} from \"../l1-ui/LoginForm/LoginFormContainer\";\r\nimport {ProfileActions, ProfileActionsType} from \"../../a2-profile/p2-bll/ProfileActions\";\r\n\r\ntype SendTokenActionsType = BooleanActionsType | ProfileActionsType;\r\n\r\nexport const sendTokenTC = (\r\n    token: string\r\n): ThunkAction<ReturnVoid, AppStoreType, ExtraArgument, SendTokenActionsType> => async (\r\n    dispatch,\r\n    // getStore\r\n) => {\r\n    setBooleanLoading(dispatch, LOGIN_BOOLEAN_NAMES);\r\n\r\n    await tryCatch(\r\n        async () => {\r\n            const data = await LoginAPI.login(token);\r\n\r\n            log('Login with token Success!', data);\r\n            setBooleanSuccess(dispatch, LOGIN_BOOLEAN_NAMES);\r\n            dispatch(ProfileActions.setProfile(true));\r\n        },\r\n        dispatch,\r\n        LOGIN_BOOLEAN_NAMES,\r\n        \"Login with token\"\r\n    );\r\n};\r\n","import React from \"react\";\nimport {log} from \"../../../../p1-common/c0-debug/debug\";\nimport s from \"./LoginPage.module.css\";\nimport LoginFormContainer from \"./LoginForm/LoginFormContainer\";\n\nconst LoginPage = React.memo(() => {\n\n    log(\"3 --- rendering LoginPage\");\n    return (\n        <div className={s.LoginPage}>\n            <LoginFormContainer/>\n\n            {/*NewsContainer*/}\n\n            {/*ChatContainer*/}\n\n            {/*HelperBotContainer*/}\n        </div>\n    );\n});\n\nexport default LoginPage;\n","import React from \"react\";\nimport {log} from \"../../../../p1-common/c0-debug/debug\";\nimport s from \"./ProfilePage.module.css\";\n\nconst ProfilePage = React.memo(() => {\n\n    log(\"4 ---- rendering ProfilePage\");\n    return (\n        <div className={s.ProfilePage}>\n            profile\n\n            {/*NewsContainer*/}\n\n            {/*ChatContainer*/}\n\n            {/*HelperBotContainer*/}\n        </div>\n    );\n});\n\nexport default ProfilePage;\n","import React, {DetailedHTMLProps, HTMLAttributes, useEffect, useState} from \"react\";\nimport Log from \"../../c0-debug/debug\";\nimport {useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../../p2-main/m2-bll/store\";\nimport {message} from \"antd\";\nimport {Redirect} from \"react-router-dom\";\nimport {PATH} from \"../../../p2-main/m1-ui/u2-routes/Routes\";\nimport CustomSpin from \"../u5-spins/CustomSpin\";\n\ntype DivPropsType = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n\ntype AuthRedirectPagePropsType = DivPropsType & {\n\n    renderLog?: string\n}\n\nconst AuthRedirectPage: React.FC<AuthRedirectPagePropsType> = React.memo((\n    {\n\n        renderLog,\n        ...restProps\n    }\n) => {\n    const {isAuth} = useSelector((store: AppStoreType) => store.profile);\n    const [firstRendering, setFirstRendering] = useState<boolean>(true);\n    const [redirect, setRedirect] = useState<boolean>(false);\n    const [spin, setSpin] = useState<boolean>(!isAuth); // !!! add request /auth/me\n\n    useEffect(() => {\n        if (firstRendering) {\n\n            if (!isAuth) {\n                message.error(\"Not logged in!\");\n                setTimeout(() => setRedirect(true), 1500);\n            }\n            setFirstRendering(false); // + rerender\n        } else {\n\n        }\n    }, [firstRendering, setFirstRendering, isAuth, setRedirect]);\n\n    if (redirect) return <Redirect to={PATH.LOGIN}/>;\n    if (spin) return <CustomSpin renderLog={(renderLog || \"rendering AuthRedirectPage\") + \" CustomSpin\"}/>;\n\n    return (\n        <>\n            <Log s={renderLog || \"rendering AuthRedirectPage\"}/>\n            <div {...restProps}/>\n        </>\n    );\n});\n\nexport default AuthRedirectPage;\n","import React from \"react\";\r\nimport {log} from \"../../../p1-common/c0-debug/debug\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {IS_DEVELOPER_VERSION} from \"../../../p0-config/config\";\r\nimport {pathHelper} from \"./pathHelper\";\r\nimport {Divider} from \"antd\";\r\nimport {RouteType} from \"./Routes\";\r\n\r\nconst HeaderForDevelopers: React.FC<{ routes: RouteType[] }> = React.memo(({routes}) => {\r\n    const navlinksForDevelopers = routes.map(r => {\r\n        const path = pathHelper(r.path);\r\n\r\n        return (\r\n            <NavLink\r\n                key={r._id}\r\n                to={path}\r\n            >\r\n                {path}\r\n            </NavLink>\r\n        )\r\n    });\r\n\r\n    log(\"3 --- rendering HeaderForDevelopers\");\r\n    if (IS_DEVELOPER_VERSION) return (\r\n        <>\r\n            <div style={{display: \"flex\", flexWrap: \"wrap\", justifyContent: \"space-between\"}}>\r\n                {navlinksForDevelopers}\r\n            </div>\r\n            <Divider/>\r\n        </>\r\n    );\r\n    else return null;\r\n});\r\n\r\nexport default HeaderForDevelopers;\r\n","export const pathHelper = (path?: string | string[]): string => {\r\n    let linkPath: string;\r\n    if (path)\r\n        if (typeof path === \"object\" && path.length) linkPath = path[0]; // if path: string[] and path.length > 0\r\n        else linkPath = typeof path === \"string\"\r\n            ? path // if path: string\r\n            : \"/not-correct-path\"; // if path: []\r\n    else linkPath = \"/error404\"; // if path undefined\r\n    return linkPath\r\n};\r\n","import React, {ReactNode} from \"react\";\r\nimport {log} from \"../../../p1-common/c0-debug/debug\";\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\nimport {v1} from \"uuid\";\r\nimport LoginPage from \"../../../p3-features/f1-auth/a1-login/l1-ui/LoginPage\";\r\nimport ProfilePage from \"../../../p3-features/f1-auth/a2-profile/p1-ui/ProfilePage\";\r\nimport AuthRedirectPage from \"../../../p1-common/c1-ui/u4-redirets/AuthRedirectPage\";\r\nimport HeaderForDevelopers from \"./HeaderForDevelopers\";\r\n\r\nexport type RouteType = {\r\n    _id: string\r\n    path?: string | string[]\r\n    exact?: boolean\r\n    component: ReactNode\r\n}\r\n\r\nexport const PATH = {\r\n    DEFAULT: \"/\",\r\n    LOGIN: \"/login\",\r\n    LOGIN_WITH_TOKEN: \"/login/:token\",\r\n    PROFILE: \"/profile\",\r\n};\r\n\r\nexport const routes: RouteType[] = [\r\n    {\r\n        _id: v1(),\r\n        path: PATH.DEFAULT,\r\n        exact: true,\r\n        component: <Redirect to={PATH.LOGIN}/>,\r\n    },\r\n    {\r\n        _id: v1(),\r\n        path: [PATH.LOGIN, PATH.LOGIN_WITH_TOKEN],\r\n        exact: true,\r\n        component: <LoginPage/>,\r\n    },\r\n    {\r\n        _id: v1(),\r\n        path: PATH.PROFILE,\r\n        exact: true,\r\n        component: (\r\n            <AuthRedirectPage renderLog={\"3 --- rendering AuthRedirectProfilePage\"}>\r\n                <ProfilePage/>\r\n            </AuthRedirectPage>\r\n        ),\r\n    },\r\n\r\n    { // 404\r\n        _id: v1(),\r\n        component: <div>404</div>,\r\n    }\r\n];\r\n\r\nconst routesForRendering = routes.map(r => (\r\n    <Route key={r._id} path={r.path} exact={r.exact} render={() => r.component}/>\r\n));\r\n\r\nconst Routes = React.memo(() => {\r\n\r\n    log(\"2 -- rendering Routes\");\r\n    return (\r\n        <>\r\n            <HeaderForDevelopers routes={routes}/>\r\n\r\n            <Switch>\r\n                {routesForRendering}\r\n            </Switch>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default Routes;\r\n","import {BooleanActionsType, booleanInitialState, BooleanType} from \"./BooleanActions\";\r\n\r\nexport const booleanReducer = (\r\n    state = booleanInitialState,\r\n    action: BooleanActionsType\r\n): typeof booleanInitialState => {\r\n    switch (action.type) {\r\n        case \"BOOLEAN/SET_VALUES\": {\r\n            const updatedBooleans = changeBooleans(state.booleans, action.booleans);\r\n            const newBooleans = addBooleans(updatedBooleans, action.booleans);\r\n            return {\r\n                ...state,\r\n                booleans: newBooleans,\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nexport const changeBooleans = (stateBooleans: BooleanType[], actionBooleans: BooleanType[]): BooleanType[] => {\r\n    return stateBooleans.map(stateB => {\r\n        const foundActionB = actionBooleans.find(actionB => actionB.name === stateB.name);\r\n\r\n        if (foundActionB && foundActionB.value !== stateB.value) return foundActionB; // change if find in action and different\r\n        else return stateB;\r\n    });\r\n};\r\nexport const addBooleans = (updatedBooleans: BooleanType[], actionBooleans: BooleanType[]): BooleanType[] => {\r\n    const newBooleans = [...updatedBooleans];\r\n\r\n    for (const actionB of actionBooleans) {\r\n        if (actionB.value && !newBooleans.find(newB => newB.name === actionB.name)) {\r\n            newBooleans.push(actionB); // add if not find in state and not false (default)\r\n        }\r\n    }\r\n    return newBooleans;\r\n};\r\n","import thunkMiddleware from \"redux-thunk\"\r\nimport {combineReducers, createStore, applyMiddleware} from \"redux\";\r\nimport {IS_DEVELOPER_VERSION} from \"../../p0-config/config\";\r\nimport {booleanReducer} from \"./booleans/booleanReducer\";\r\nimport {profileReducer} from \"../../p3-features/f1-auth/a2-profile/p2-bll/profileReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    booleans: booleanReducer, // boolean values for all project\r\n    profile: profileReducer,\r\n\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\nif (IS_DEVELOPER_VERSION) {\r\n    // @ts-ignore\r\n    window.store = store; // for developers\r\n}\r\n","import {ProfileActionsType, profileInitialState} from \"./ProfileActions\";\r\n\r\nexport const profileReducer = (\r\n    state = profileInitialState,\r\n    action: ProfileActionsType\r\n): typeof profileInitialState => {\r\n    switch (action.type) {\r\n        case \"PROFILE/SET_PROFILE\": {\r\n            return {\r\n                ...state,\r\n                isAuth: action.test,\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\n","import React from \"react\";\r\nimport {log} from \"../../../p1-common/c0-debug/debug\";\r\nimport {PageHeader, Divider} from \"antd\";\r\n\r\nconst Header = React.memo(() => {\r\n\r\n    log(\"2 -- rendering Header\");\r\n    return (\r\n        <>\r\n            <PageHeader\r\n                title={(\r\n                    <>\r\n                        Personal Area\r\n                    </>\r\n                )}\r\n                subTitle={(\r\n                    <a href={\"https://it-incubator.by/\"} rel=\"noopener noreferrer\" target=\"_blank\">\r\n                        it-incubator\r\n                    </a>\r\n                )}\r\n            />\r\n            <Divider/>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport s from \"./App.module.css\";\r\nimport \"antd/dist/antd.css\"; // antd\r\nimport {log} from \"../../../p1-common/c0-debug/debug\";\r\nimport Routes from \"../u2-routes/Routes\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"../../m2-bll/store\";\r\nimport Header from \"../u4-header/Header\";\r\n\r\nconst App = React.memo(() => {\r\n\r\n    log(\"1 - rendering App\");\r\n    return (\r\n        <div className={s.App}>\r\n            <Provider store={store}>\r\n                <HashRouter>\r\n                    <Header/>\r\n                    <Routes/>\r\n                </HashRouter>\r\n            </Provider>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {useEffect, useState} from \"react\";\r\nimport {MainAPI} from \"../../m3-dal/instance\";\r\nimport {notification} from \"antd\";\r\n\r\nconst Ping: React.FC<{ show?: boolean }> = React.memo(({show}) => {\r\n    const [firstRendering, setFirstRendering] = useState<boolean>(true);\r\n    useEffect(() => {\r\n        if (firstRendering) {\r\n            MainAPI.ping() // for test, wake up back\r\n                .then(data => {\r\n                    console.warn(\"ping: \", data.ping);\r\n                    const ping = new Date().getTime() - data.backTime;\r\n\r\n                    show && notification.info({\r\n                        message: (\r\n                            <>\r\n                                <div>ping: front to back = {data.ping},</div>\r\n                                <div>back to front = {ping}</div>\r\n                            </>\r\n                        ),\r\n                        placement: \"bottomLeft\",\r\n                    });\r\n                    MainAPI.ping() // real ping, after wake up back\r\n                        .then(data => {\r\n                            console.warn(\"ping: \", data.ping);\r\n                            const ping = new Date().getTime() - data.backTime;\r\n\r\n                            show && notification.info({\r\n                                message: (\r\n                                    <>\r\n                                        <div>ping: front to back = {data.ping},</div>\r\n                                        <div>back to front = {ping}</div>\r\n                                    </>\r\n                                ),\r\n                                placement: \"bottomLeft\",\r\n                            });\r\n\r\n                        })\r\n                        .catch(e => console.error(\"ping request error object: \", {...e}));\r\n                })\r\n                .catch(e => console.error(\"ping request error object: \", {...e}));\r\n\r\n            setFirstRendering(false);\r\n        } else {\r\n\r\n        }\r\n    }, [firstRendering, setFirstRendering, show]);\r\n    return null\r\n});\r\n\r\nexport default Ping;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './p2-main/m1-ui/u1-app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Ping from \"./p2-main/m1-ui/u3-ping/Ping\";\r\n\r\nReactDOM.render(\r\n    <>\r\n        {/*off StrictMode if release*/}\r\n        {/*<React.StrictMode>*/}\r\n            <Ping show/>\r\n            <App/>\r\n        {/*</React.StrictMode>*/}\r\n    </>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoginForm\":\"LoginForm_LoginForm__1je6Q\",\"form\":\"LoginForm_form__G6x_a\",\"loginButton\":\"LoginForm_loginButton__1yWdR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"CustomInput_base__23ZeV\"};"],"sourceRoot":""}